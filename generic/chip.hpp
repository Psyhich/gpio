////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef GPIO_GENERIC_CHIP_HPP
#define GPIO_GENERIC_CHIP_HPP

////////////////////////////////////////////////////////////////////////////////
#include "chip_base.hpp"

#include <asio/posix/stream_descriptor.hpp>
#include <asio/io_context.hpp>
#include <string>

////////////////////////////////////////////////////////////////////////////////
namespace gpio
{
namespace generic
{

////////////////////////////////////////////////////////////////////////////////
class chip : public chip_base
{
public:
    ////////////////////
    chip(asio::io_context&, std::string id);
    virtual ~chip() override;

private:
    ////////////////////
    asio::posix::stream_descriptor fd_;
    friend class pin;
};

////////////////////////////////////////////////////////////////////////////////
}
}

////////////////////////////////////////////////////////////////////////////////
#endif
